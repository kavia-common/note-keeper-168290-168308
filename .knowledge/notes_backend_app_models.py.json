{"is_source_file": true, "format": "Python", "description": "Defines data models and repository interface for managing notes, including an in-memory implementation for testing and a public interface for persistence operations.", "external_files": ["uuid", "datetime"], "external_methods": ["uuid.uuid4", "datetime.utcnow"], "published": ["Note", "NotesRepository", "InMemoryNotesRepository"], "classes": [{"name": "Note", "description": "Data model representing a note with fields for id, title, content, created_at, and updated_at, along with static and class methods for creation and timestamp handling."}, {"name": "NotesRepository", "description": "Abstract base class defining the interface for note persistence operations like list, get, create, update, and delete, intended for implementation by concrete classes."}, {"name": "InMemoryNotesRepository", "description": "Concrete implementation of NotesRepository that stores notes in a dictionary for preview/testing purposes, with methods for CRUD and listing with pagination."}], "methods": [{"name": "Note.now_iso", "description": "Static method returning current UTC timestamp in ISO 8601 format."}, {"name": "Note.new", "description": "Class method to create a new Note instance with a unique UUID and current timestamp."}, {"name": "NotesRepository.list", "description": "Abstract method for listing notes with pagination; to be implemented by subclasses."}, {"name": "NotesRepository.get", "description": "Abstract method to retrieve a note by its ID."}, {"name": "NotesRepository.create", "description": "Abstract method to create a new note with given title and content."}, {"name": "NotesRepository.update", "description": "Abstract method to update existing note fields identified by ID."}, {"name": "NotesRepository.delete", "description": "Abstract method to delete a note by its ID."}, {"name": "InMemoryNotesRepository.list", "description": "Returns a paginated list of notes along with metadata such as total count and page info."}, {"name": "InMemoryNotesRepository.get", "description": "Retrieves a note by ID from internal storage."}, {"name": "InMemoryNotesRepository.create", "description": "Creates and stores a new note with a unique ID."}, {"name": "InMemoryNotesRepository.update", "description": "Updates an existing note\u2019s title and/or content and refreshes its timestamp."}, {"name": "InMemoryNotesRepository.delete", "description": "Deletes a note by its ID from internal storage."}, {"name": "None __init__(self)", "scope": "InMemoryNotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Note create(self, title: str, content: str)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "bool delete(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Note] get(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,object] list(self, page: int = 1, page_size: int = 20)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "\"Note\" new(cls, title: str, content: str)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "str now_iso()", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Note] update(self, note_id: str, title: Optional[str] = None, content: Optional[str] = None)", "scope": "NotesRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["uuid.uuid4", "datetime.utcnow", "Note.now_iso"], "search-terms": ["NotesRepository", "InMemoryNotesRepository", "Note data model", "notes database interface", "UUID", "pagination"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "InMemoryNotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^class InMemoryNotesRepository(NotesRepository):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^class Note:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^class NotesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def create(self, title: str, content: str) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, title: str, content: str)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def create(self, title: str, content: str) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, title: str, content: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def delete(self, note_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: str)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def delete(self, note_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def get(self, note_id: str) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def get(self, note_id: str) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def list(self, page: int = 1, page_size: int = 20) -> Dict[str, object]:$/", "language": "Python", "typeref": "typename:Dict[str,object]", "kind": "member", "signature": "(self, page: int = 1, page_size: int = 20)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def list(self, page: int = 1, page_size: int = 20) -> Dict[str, object]:$/", "language": "Python", "typeref": "typename:Dict[str,object]", "kind": "member", "signature": "(self, page: int = 1, page_size: int = 20)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "new", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def new(cls, title: str, content: str) -> \"Note\":$/", "language": "Python", "typeref": "typename:\"Note\"", "kind": "member", "signature": "(cls, title: str, content: str)", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "now_iso", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def now_iso() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "()", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def update(self, note_id: str, title: Optional[str] = None, content: Optional[str] = None) -/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str, title: Optional[str] = None, content: Optional[str] = None)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/note-keeper-168290-168308/notes_backend/app/models.py", "pattern": "/^    def update(self, note_id: str, title: Optional[str] = None, content: Optional[str] = None) -/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str, title: Optional[str] = None, content: Optional[str] = None)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "474c76696936f1044c704062e0073302", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/models.py", "revision_history": [{"15": ""}]}